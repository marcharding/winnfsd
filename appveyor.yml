cache:
  - C:\Users\appveyor\.vagrant.d
  - C:\downloads

configuration:
  - Release

init:
  # uncomment for rdp debugging
  - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
  - git config --global core.eol lf
  - git config --global core.autocrlf false
  - ps: mkdir C:\Users\appveyor\.vagrant.d | Out-Null
  - ps: mkdir C:\downloads | Out-Null

install:
  - ps: |
      cd C:\downloads
      if (-Not (Test-Path C:\downloads\VirtualBox-5.0.20-106931-Win.exe)){ Start-FileDownload "http://download.virtualbox.org/virtualbox/5.0.20/VirtualBox-5.0.20-106931-Win.exe" }
      if (-Not (Test-Path C:\downloads\vagrant_1.8.1.msi)){ Start-FileDownload "https://releases.hashicorp.com/vagrant/1.8.1/vagrant_1.8.1.msi" }
      Start-Process -FilePath "VirtualBox-5.0.20-106931-Win.exe" -ArgumentList "-silent -logging -msiparams INSTALLDIR=C:\VBox" -Wait
      Start-Process -FilePath "msiexec.exe" -ArgumentList "/a vagrant_1.8.1.msi /qb TARGETDIR=C:\Vagrant" -Wait
      cd $env:APPVEYOR_BUILD_FOLDER
  - set PATH=C:\Vagrant\HashiCorp\Vagrant\bin;C:\VBox;%PATH%
  - vagrant -v
  - VBoxManage -v
  - ssh -V
  - ipconfig /all

before_build:
  # see http://help.appveyor.com/discussions/problems/4569-the-target-_convertpdbfiles-listed-in-a-beforetargets-attribute-at-c-does-not-exist-in-the-project-and-will-be-ignored
  - del "C:\Program Files (x86)\MSBuild\12.0\Microsoft.Common.targets\ImportAfter\Xamarin.Common.targets"
  - del "C:\Program Files (x86)\MSBuild\14.0\Microsoft.Common.targets\ImportAfter\Xamarin.Common.targets"
  - ps: |
      if ($env:APPVEYOR_REPO_TAG_NAME) { $env:VERSION = $env:APPVEYOR_REPO_TAG_NAME } else { $env:VERSION = $env:APPVEYOR_REPO_BRANCH }
      (Get-Content $env:APPVEYOR_BUILD_FOLDER\src\winnfsd.cpp).replace('{{VERSION}}', $env:VERSION) | Set-Content $env:APPVEYOR_BUILD_FOLDER\src\winnfsd.cpp
      (Get-Content $env:APPVEYOR_BUILD_FOLDER\src\winnfsd.cpp).replace('{{HASH}}', $env:APPVEYOR_REPO_COMMIT.Substring(0, 7)) | Set-Content $env:APPVEYOR_BUILD_FOLDER\src\winnfsd.cpp

before_test:
  - ps: netsh advfirewall firewall add rule name="WinNFSd-IN" dir="in" action=allow protocol=any program="$env:APPVEYOR_BUILD_FOLDER\src\Release\WinNFSd.exe" profile=any
  - ps: netsh advfirewall firewall add rule name="WinNFSd-OUT" dir="out" action=allow protocol=any program="$env:APPVEYOR_BUILD_FOLDER\src\Release\WinNFSd.exe" profile=any
  - ps: cd $env:APPVEYOR_BUILD_FOLDER\tests
  - vagrant up
  - mkdir C:\connectathon-winnfsd
  - ps: copy -Recurse $env:APPVEYOR_BUILD_FOLDER\tests C:\connectathon-winnfsd
  - ps: start-process "$env:APPVEYOR_BUILD_FOLDER\src\Release\WinNFSd.exe" "-log off C:\connectathon-winnfsd"

test_script:
  - vagrant ssh -c "sudo mkdir /winnfsd && sudo mount -o 'vers=3,udp,nolock' 192.168.56.1:/C/connectathon-winnfsd /winnfsd"
  - vagrant ssh -c "sudo -E /winnfsd/tests/bash/tests.sh"

matrix:
  fast_finish: true

artifacts:
  - path: src/Release/winnfsd.exe
